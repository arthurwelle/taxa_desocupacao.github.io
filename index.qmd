---
title: "Taxa de desocupação"
---




```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,message = FALSE,warning = FALSE)

# sempre que tiver alterações
# git add .
# git commit -m "mensagem"
# git push origin main

# carrega pacotes e funções criados
# install.packages("sidrar")
# install.packages("tidyverse")
# install.packages("ggplot2")
# install.packages("scales")
# install.packages("data.table")

library(tidyverse)
library(sidrar)
library(ipeadatar)
library(ggiraph)

# se instalar pacotes novos nesse projeto, precisa adiconaar ao lockfile
# renv::status()
# renv::snapshot()
```


```{r}
tema_padrao <- ggplot2::theme(
            text = element_text( face = "bold", size = 12),
            plot.title = ggtext::element_textbox_simple(size = 14, face = "bold", margin = margin(0,0,10,0)),
            plot.subtitle = element_text(size = 10),
            plot.title.position = "plot",
            plot.caption.position =  "plot",
            legend.title = element_blank(),
            legend.position = "bottom",
            axis.text.x = element_text(color = "black", size = 12, vjust = 0.5),
            axis.text.y = element_text(color = "black", size = 12, face = "bold"),
            axis.title = element_text( size = 12, face = "bold"),
            legend.text = element_text(size = 12, face = "bold"),
            legend.margin = margin(0,0,0,0),
            legend.box.margin = margin(-10,-10,-0,-10))

f_ggsave <- function(x, Nome, w=8, h=5){
ggplot2::ggsave(plot = x,
                filename = paste0(Nome, ".png"), 
                path = "./IMG/", 
                dpi = "retina", 
                width = w, 
                height = h)}

#cria função para media movel  12 meses 
MM12m <- function(x) {
  y <- c(1:(length(x)))                         
  for(i in 1:(length(x)-11)) {          
    y[i+11] <- mean(x[(i+0):(i+11)])  
  }
  y[1:12] <- NA 
  return(y) 
}



```

Última atualização em: `r as.POSIXct(format(Sys.time()), tz = "GMT")`.

Veja: https://github.com/arthurwelle/taxa_desocupacao.github.io



# 1) Taxa de desocupação.

```{r sidrar, message=FALSE, warning=FALSE}
#d1: Taxa de Desocupação                      SIDRA  6381

#chama as séries no sidra
d <- sidrar::get_sidra(api = "/t/6381/n1/all/v/4099/p/all/d/v4099%201") #Taxa de Desocupação PNADCM

#selecionando dados e dando novos nomes as colunas
d <- d |> mutate(date = lubridate::ymd(paste0(`Trimestre Móvel (Código)`, "01"))) %>%
          select(date, Valor)
```


```{r grafico, message=FALSE, warning=FALSE, fig.height = 5, fig.width = 8, eval=TRUE, echo=FALSE}
# gráfico
g <- ggplot2::ggplot() +
        geom_line (data = d,
                   aes(x = date,
                       y = Valor / 100,
                       color = "serie"),
                   linewidth = 1.5) +
        geom_point_interactive(data = d,
                   aes(x = date,
                       y = Valor / 100,
                       color = "serie",
                       tooltip = paste0(format(date, format = "%m/%Y"), " ", Valor, "%")),
                   size = 0.8)   +  
        scale_y_continuous(limits = \(y){c(0, max(y) * 1.1)},
                           labels = scales::percent_format(accuracy = 1)) +
        scale_x_date(date_breaks = "1 year", labels = scales::date_format("%Y")) +
        scale_color_brewer(palette = "Set1") +
        labs(x = element_blank(),
             y = element_blank(),
             caption = "Fonte: IBGE - PNAD Contínua Mensal",
             ) +
        theme_bw() +
        theme(
            text = element_text( face = "bold", size = 13),
            plot.title = element_text(size = 13, face = "bold"),
            plot.subtitle = element_text(size = 13 - 1),
            plot.title.position = "plot",
            plot.caption.position =  "plot",
            legend.title = element_blank(),
            axis.text.x = element_text(color = "black", size = 13 - 1, angle = 90, vjust = 0.5),
            axis.text.y = element_text(color = "black", size = 13 - 1, face = "bold"),
            axis.title = element_text( size = 13 - 1, face = "bold"),
            legend.text = element_text(size = 13 - 1, face = "bold"),
            legend.position = "none")

f_ggsave(g, "PNADCM_Taxa_Desocupacao")
g1 <- girafe(ggobj = g)
g1

```








# 2) Taxa de desocupação por sexo (PNADC-T)

```{r, s1}
#chama a série no sidra
d <- sidrar::get_sidra(api = "/t/4093/n1/all/v/4099/p/all/c2/allxt/d/v4099%201")

#selecionando dados e dando novos nomes as colunas
d1 <- d %>%  mutate(date = `Trimestre (Código)`,
                           date = lubridate::yq(paste0(date)),
                           Valor = Valor / 100) %>%
            select(date, Valor, Sexo)

```

```{r}
g <- ggplot()  +
  geom_line(data = d1,
            aes(x = date,
                y = Valor,
                color = Sexo),
            linewidth = 1.5) +
  geom_point_interactive(data = d1,
                   aes(x = date,
                       y = Valor,
                       color = Sexo,
                       tooltip = paste0(format(date, format = "%m/%Y"), " ", Valor * 100, "%")),
                   size = 0.8) +   
  scale_x_date(date_breaks = "1 year",
               labels = scales::date_format("%Y")) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1),
                     limits = \(y){c(0, max(y) * 1.1)}) +
  scale_color_brewer(palette = "Set1") +
  labs(x = element_blank(),
       y = element_blank(),
       title = "Taxa de desocupação por sexo - Brasil",
       subtitle = "Pessoas desocupadas sobre total de pessoas na força de trabalho",
       caption = "Fonte: PNADC-Trimestral") +
  theme_bw() +
  tema_padrao

f_ggsave(g, "PNADCM_Taxa_Desocupacao_Sexo")
g1 <- girafe(ggobj = g)
g1
```


# 3) Nível de desocupação (PNADC-T)

```{r, s2}
#chama a série no sidra
d <- sidrar::get_sidra(api = "/t/4093/n1/all/v/4098/p/all/c2/6794/d/v4098%201")

#selecionando dados e dando novos nomes as colunas
d1 <- d %>%  mutate(date = `Trimestre (Código)`,
                           date = lubridate::yq(paste0(date)),
                           Valor = Valor / 100) %>%
            select(date, Valor, Sexo)

```

```{r}
g <- ggplot()  +
  geom_line(data = d1,
            aes(x = date,
                y = Valor),
            linewidth = 1.5) +
  geom_point_interactive(data = d1,
                   aes(x = date,
                       y = Valor,
                       tooltip = paste0(format(date, format = "%m/%Y"), " ", Valor * 100, "%")),
                   color = "black",
                   size = 0.7) +    
  scale_x_date(date_breaks = "1 year",
               labels = scales::date_format("%Y")) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1),
                     limits = \(y){c(0, max(y) * 1.1)}) +
  labs(x = element_blank(),
       y = element_blank(),
       title = "Nível de desocupação - Brasil",
       subtitle = "Pessoas desocupadas sobre total de pessoas em idade para trabalhar",
       caption = "Fonte: PNADC-Trimestral") +
  theme_bw() +
  tema_padrao

f_ggsave(g, "PNADCM_Nivel_Desocupacao_Sexo")
g1 <- girafe(ggobj = g)
g1
```



# 4) Quantidade de pessoas na força de trabalho

```{r, s3}
#chama a série no sidra
d <-sidrar::get_sidra(api = "/t/6318/n1/all/v/1641/p/all/c629/32386") #FT

#selecionando dados e dando novos nomes as colunas
d <- d %>% mutate(FT = Valor, date = `Trimestre Móvel (Código)`) %>%
           select(date, FT) %>%
           mutate(date = lubridate::ymd(paste0(date, "01")))

#cria gráfico ::ggplot
g <- ggplot(d)  +
          geom_line(aes(x = date,
                        y = FT),
                    linewidth = 1.5) +
          geom_point_interactive(
                   aes(x = date,
                       y = FT,
                       tooltip = paste0(format(date, format = "%m/%Y"), " ", FT)),
                   color = "black",
                   size = 0.7) +   
          scale_x_date(date_breaks = "1 year",
                       labels = scales::date_format("%Y")) +
          scale_y_continuous(labels = scales::number_format(scale = 1/1e3,
                                                            accuracy = 1),
                             limits = \(y){c(80e3, max(y) * 1.1)}) +
          labs(x = element_blank(),
               y = "Milhões de pessoas",
               title = "Quantidade de pessoas na força de trabalho",
               caption = "Fonte: PNADC-Mensal" ) +
          theme_bw() +
          tema_padrao

f_ggsave(g, "Forca_Trabalho", h = 5)
g1 <- girafe(ggobj = g)
g1
```


# 5) Taxa de desocupação por faixa etária (PNADC-T)

```{r, s4}
#chama a série no sidra
d <-sidrar::get_sidra(api = "/t/4094/n1/all/v/4099/p/all/c58/allxt/d/v4099%201")

#selecionando dados e dando novos nomes as colunas
d1 <- d %>%  mutate(date = `Trimestre (Código)`,
                           date = lubridate::yq(paste0(date)),
                           Valor = Valor / 100,
                           FaixaEtaria = `Grupo de idade`) %>%
            select(date, Valor, FaixaEtaria)

```

```{r}
g <- ggplot()  +
  geom_line(data = d1,
            aes(x = date,
                y = Valor,
                color = FaixaEtaria),
            linewidth = 1.5) +
   geom_point_interactive(data = d1,
                   aes(x = date,
                       y = Valor,
                       color = FaixaEtaria,
                       tooltip = paste0(format(date, format = "%m/%Y"), " ", Valor * 100, "%")),
                   size = 0.7) +   
  scale_x_date(date_breaks = "1 year",
               labels = scales::date_format("%Y")) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1),
                     limits = \(y){c(0, max(y) * 1.1)}) +
  scale_color_brewer(palette = "Set1") +
  labs(x = element_blank(),
       y = element_blank(),
       title = "Taxa de desocupação por faixa etária - Brasil",
       subtitle = "Pessoas desocupadas sobre total de pessoas na força de trabalho por faixa etária",
       caption = "Fonte: PNADC-Trimestral") +
  theme_bw() +
  tema_padrao +
  guides(color = guide_legend(nrow = 2))

f_ggsave(g, "PNADCM_Taxa_Desocupacao_FaixaEtaria")
g1 <- girafe(ggobj = g)
g1
```


# 6) Quantidade de ocupados

```{r, s5}
#chama a série no sidra
d <-sidrar::get_sidra(api = "/t/6318/n1/all/v/1641/p/all/c629/32387")

#selecionando dados e dando novos nomes as colunas
d <- d %>% mutate(FT = Valor, date = `Trimestre Móvel (Código)`) %>%
           select(date, FT) %>%
           mutate(date = lubridate::ymd(paste0(date, "01")))

#cria gráfico ::ggplot
g <- ggplot(d)  +
          geom_line(aes(x = date,
                        y = FT),
                    linewidth = 1.5) +
          geom_point_interactive(
                   aes(x = date,
                       y = FT,
                       tooltip = paste0(format(date, format = "%m/%Y"), " ", FT)),
                   color = "black",
                   size = 0.7) +   
          scale_x_date(date_breaks = "1 year",
                       labels = scales::date_format("%Y")) +
          scale_y_continuous(labels = scales::number_format(scale = 1/1e3,
                                                            accuracy = 1),
                             limits = \(y){c(75e3, max(y) * 1.1)} ) +
          labs(x = element_blank(),
               y = "Milhões de pessoas",
               title = "Quantidade de pessoas ocupadas",
               caption = "Fonte: PNADC-Mensal" ) +
          theme_bw() +
          tema_padrao

f_ggsave(g, "PNADCM_Qtd_Ocupados", h = 5)
g1 <- girafe(ggobj = g)
g1
```


# 7) Contribuição para a variação dos ocupados (média móvel 12 meses)

```{r}
paleta_9cores <- c(
"#ffb703", # "Conta própria com CNPJ"
"#fcbbbb", # "Conta própria sem CNPJ"
"#56e3da", # "Doméstico"
"#7eafde", # "Empregado privado com carteira"
"#ff2e2e", # "Empregado privado sem carteira"
"#ff7e2e", # "Empregado público"
"#2645e0", # "Empregador com CNPJ"
"#a60000", # "Empregador sem CNPJ"
"#5eff8f" # "Trabalhador familiar auxiliar"
)
```


```{r, s6, fig.height=8, fig.width=8}
d <- sidrar::get_sidra(api = "/t/6320/n1/all/v/4090/p/all/c11913/all")

d1 <- d %>%
            mutate(date = `Trimestre Móvel (Código)`,
                          Grupo = `Posição na ocupação e categoria do emprego no trabalho principal`,
                          CodGrupo = `Posição na ocupação e categoria do emprego no trabalho principal (Código)`) %>%
            select(date, Grupo, Valor, CodGrupo ) %>%
            mutate(date = lubridate::ymd(paste0(date, "01"))) %>%
            arrange(CodGrupo,date) %>%
            group_by(CodGrupo) %>%
            mutate(MM12m = MM12m(Valor)) %>%
            group_by(date) %>%
            mutate(STotal = sum(MM12m[which(Grupo == "Total")])) %>%
            group_by(CodGrupo) %>%
            mutate(diff = ((MM12m - lag(MM12m, n = 1L))/lag(STotal, n = 1L)) ,
                          diff_anual = ((Valor - lag(Valor, n = 12L))/lag(STotal, n = 1L)) ) %>%
            mutate(Grupo = recode(Grupo,
"Empregado no setor privado, exclusive trabalhador doméstico - com carteira de trabalho assinada"  = "Empregado privado com carteira",
"Empregado no setor privado, exclusive trabalhador doméstico - sem carteira de trabalho assinada" = "Empregado privado sem carteira",
"Empregado no setor público, exclusive militar e funcionário público estatutário - com carteira de trabalho assinada" = "Empregado público com carteira",
"Empregado no setor público, exclusive militar e funcionário público estatutário - sem carteira de trabalho assinada" = "Empregado público sem carteira",
"Trabalhador doméstico - com carteira de trabalho assinada"  = "Doméstico(a) com carteira",
"Trabalhador doméstico - sem carteira de trabalho assinada"  = "Doméstico(a) sem carteira" ))

# seleciona casos
d2 <- d1 %>%  filter(CodGrupo==31722 | # empregodo privado com carteira
                            CodGrupo==31723 | # empregodo privado sem carteira
                            CodGrupo==31724 | # domestico total
                            CodGrupo==31727 | # empregdo setor publico total
                            CodGrupo==45934 | # Empregador com CNPJ
                            CodGrupo==45935 | # Empregador sem CNPJ
                            CodGrupo==45936 | # conta propria com CNPJ
                            CodGrupo==45937 | # conta propria sem CNPJ
                            CodGrupo==31731   # trabalhador familiar
                              )

d4 <- d2 %>%
  filter( date >= "2016-12-01") %>%
  mutate(Grupo = case_when(
              Grupo == "Doméstico(a) com carteira" ~ "Doméstico",
              Grupo == "Doméstico(a) sem carteira" ~ "Doméstico",
              Grupo == "Empregado público com carteira" ~ "Empregado público",
              Grupo == "Empregado público sem carteira" ~ "Empregado público",
              TRUE ~ Grupo)) %>%
  group_by(date, Grupo) %>%
  summarise(diff_anual = sum(diff_anual))

d5 <- d4 %>%
  group_by(date) %>%
  summarise(diff_anual_total = sum(diff_anual))

#cria gráfico ::ggplot
g <- ggplot2::ggplot()  +
          geom_col_interactive(data = d4,
                   aes(x = date,
                       y = diff_anual,
                       fill = Grupo,
                       tooltip = paste0(format(date, format = "%m/%Y"), " ", round(diff_anual * 100, 1), "%" )),
                   stats = "identity") +
          geom_line(data = d5,
                    aes(x = date,
                        y = diff_anual_total,
                        color = "Variação Total"),
                    size = 1) +
          geom_hline(yintercept = 0,
                     color = "black",
                     size = 1) +
          scale_fill_manual(values = paleta_9cores) +
          scale_color_manual(name = "",
                             values = "black") +
          scale_x_date(expand = c(0, 0),
                       date_breaks = "1 years",
                       date_labels = "%Y") +
          scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
          labs(title = "Contribuição para a variação da média móvel 12 meses do total de ocupados por posição na ocupação e formalização",
               x = element_blank(),
               y = "Contribuição para a variação anual",
               caption = "Fonte: PNADC Mensal") +
          theme_bw() +
          tema_padrao +
          theme(legend.position = "bottom",
                legend.box.margin = margin(1,1,1,1)) +
          guides(fill = guide_legend(ncol = 1),
                 color = guide_legend(ncol = 1))

f_ggsave(g, "PNADCM_Contribuicao_Variacao", h = 6, w = 11)
g1 <- girafe(ggobj = g)
g1
```



```{r, fig.height=8, fig.width=8}
d1 <- d %>%
            mutate(date = `Trimestre Móvel (Código)`,
                          Grupo = `Posição na ocupação e categoria do emprego no trabalho principal`,
                          CodGrupo = `Posição na ocupação e categoria do emprego no trabalho principal (Código)`) %>%
            select(date, Grupo, Valor, CodGrupo ) %>%
            mutate(date = lubridate::ymd(paste0(date, "01"))) %>%
            arrange(CodGrupo,date) %>%
            group_by(date) %>%
            mutate(STotal = sum(Valor[which(Grupo == "Total")])) %>%
            group_by(CodGrupo) %>%
            mutate(diff = ((Valor - lag(Valor, n = 1L))/lag(STotal, n = 1L)) ,
                          diff_anual = ((Valor - lag(Valor, n = 1L))/lag(STotal, n = 1L)) ) %>%
            mutate(Grupo = recode(Grupo,
"Empregado no setor privado, exclusive trabalhador doméstico - com carteira de trabalho assinada"  = "Empregado privado com carteira",
"Empregado no setor privado, exclusive trabalhador doméstico - sem carteira de trabalho assinada" = "Empregado privado sem carteira",
"Empregado no setor público, exclusive militar e funcionário público estatutário - com carteira de trabalho assinada" = "Empregado público com carteira",
"Empregado no setor público, exclusive militar e funcionário público estatutário - sem carteira de trabalho assinada" = "Empregado público sem carteira",
"Trabalhador doméstico - com carteira de trabalho assinada"  = "Doméstico(a) com carteira",
"Trabalhador doméstico - sem carteira de trabalho assinada"  = "Doméstico(a) sem carteira" ))

d1 <- d1 |> filter(date >= as.Date("2022-01-01"))

# seleciona casos
d2 <- d1 %>%  filter(CodGrupo == 31722 | # empregodo privado com carteira
                     CodGrupo == 31723 | # empregodo privado sem carteira
                     CodGrupo == 31724 | # domestico total
                     CodGrupo == 31727 | # empregdo setor publico total
                     CodGrupo == 45934 | # Empregador com CNPJ
                     CodGrupo == 45935 | # Empregador sem CNPJ
                     CodGrupo == 45936 | # conta propria com CNPJ
                     CodGrupo == 45937 | # conta propria sem CNPJ
                     CodGrupo == 31731   # trabalhador familiar
                    )

d4 <- d2 %>%
  filter( date >= "2016-12-01") %>%
  mutate(Grupo = case_when(
         Grupo == "Doméstico(a) com carteira" ~ "Doméstico",
         Grupo == "Doméstico(a) sem carteira" ~ "Doméstico",
         Grupo == "Empregado público com carteira" ~ "Empregado público",
         Grupo == "Empregado público sem carteira" ~ "Empregado público",
         TRUE ~ Grupo)) %>%
  group_by(date, Grupo) %>%
  summarise(diff_anual = sum(diff_anual))

d5 <- d4 %>%
  group_by(date) %>%
  summarise(diff_anual_total = sum(diff_anual))

#cria gráfico ::ggplot
g <- ggplot2::ggplot()  +
          geom_col_interactive(data = d4,
                   aes(x = date,
                       y = diff_anual,
                       fill = Grupo,
                       tooltip = paste0(format(date, format = "%m/%Y"), " ", round(diff_anual * 100, 1), "%" )),
                   stats = "identity") +
          geom_line(data = d5,
                    aes(x = date,
                        y = diff_anual_total,
                        color = "Variação Total"),
                    size = 1) +
          geom_hline(yintercept = 0,
                     color = "black",
                     size = 1) +
          scale_fill_manual(values = paleta_9cores) +
          scale_color_manual(name = "",
                             values = "black") +
          scale_x_date(expand = c(0, 0),
                       date_breaks = "1 years",
                       date_labels = "%Y") +
          scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
          labs(title = "Contribuição para a variação do total de ocupados por posição na ocupação e formalização",
               x = element_blank(),
               y = "Contribuição para a variação",
               caption = "Fonte: PNADC Mensal") +
          theme_bw() +
          tema_padrao +
          theme(legend.position = "bottom",
                legend.box.margin = margin(1,1,1,1)) +
          guides(fill = guide_legend(ncol = 1),
                 color = guide_legend(ncol = 1))

f_ggsave(g, "PNADCM_Contribuicao_Variacao_Mensal", h = 6, w=11)
g1 <- girafe(ggobj = g)
g1
```

# 8) Quantidade de desocupados

```{r, s7}
#chama a série no sidra
d <- sidrar::get_sidra(api = "/t/6318/n1/all/v/1641/p/all/c629/32446")

#selecionando dados e dando novos nomes as colunas
d <- d %>% mutate(FT = Valor, date = `Trimestre Móvel (Código)`) %>%
           select(date, FT) %>%
           mutate(date = lubridate::ymd(paste0(date, "01")))

#cria gráfico ::ggplot
g <- ggplot(d)  +
          geom_line(aes(x = date,
                        y = FT),
                    linewidth = 1.5) +
          geom_point_interactive(
                   aes(x = date,
                       y = FT,
                       tooltip = paste0(format(date, format = "%m/%Y"), " ", FT)),
                   color = "black",
                   size = 0.7) +   
          scale_x_date(date_breaks = "1 year",
                       labels = scales::date_format("%Y")) +
          scale_y_continuous(labels = scales::number_format(scale = 1/1e3,
                                                            accuracy = 0.1),
                             limits = \(y){c(0, max(y) * 1.1)}) +
          labs(x = element_blank(),
               y = "Milhões de pessoas",
               title = "Quantidade de pessoas desocupadas",
               caption = "Fonte: PNADC-Mensal" ) +
          theme_bw() +
          tema_padrao

f_ggsave(g, "PNADCM_Qtd_Desocupados", h = 5)
g1 <- girafe(ggobj = g)
g1
```


# 9) Quantidade de subocupados

```{r, s8}
#chama a série no sidra
#d <- sidrar::get_sidra(api = "/t/4100/n1/all/v/1641/p/all/c604/31751") # trimestral
d <- sidrar::get_sidra(api = "/t/6438/n1/all/v/1641/p/all/c604/31751") #subocupado
#selecionando dados e dando novos nomes as colunas
d2 <- d %>%  mutate(date = `Trimestre Móvel (Código)`,
                           date = lubridate::yq(paste0(date)),
                           Valor = Valor) %>%
            select(date, Valor)

# corrigindo o subocupado que em 3T2015 mudou de habitual para efetivo (ou o contrário).
# preencher o buraco
d2$Valor[44:45] <- d2$Valor[46]
d2$Valor[] <- as.numeric(d2$Valor[])

# e modificar os anteriores para ficar no mesmo patamar
d2$Valor[1:43] <- (d2$Valor[1:43] / d2$Valor[43])*d2$Valor[46]

```

```{r}
g <- ggplot()  +
  geom_line(data = d2,
            aes(x = date,
                y = Valor),
            linewidth = 1.5) +
  geom_point_interactive(data = d2,
                   aes(x = date,
                       y = Valor,
                       tooltip = paste0(format(date, format = "%m/%Y"), " ", Valor)),
                   color = "black",
                   size = 0.7) +    
  scale_x_date(date_breaks = "1 year",
               labels = scales::date_format("%Y")) +
  scale_y_continuous(labels = scales::number_format(accuracy = 1,
                                                    scale = 1/1e3),
                     limits = \(y){c(0, max(y) * 1.1)}) +
  labs(x = element_blank(),
       y = "Milhões de pessoas",
       title = "Quantidade de pessoas subocupadas - Brasil",
       subtitle = "Pessoas subocupadas por insuficiência de horas trabalhadas",
       caption = "Fonte: PNADC-Mensal") +
  theme_bw() +
  tema_padrao

f_ggsave(g, "PNADCT_Qtd_Subocupadas")
g1 <- girafe(ggobj = g)
g1
```


# 10) Quantidade de desalentados

```{r, s9}
#chama a série no sidra
d <- sidrar::get_sidra(api = "/t/6438/n1/all/v/1641/p/all/c604/46254") #Desalentados

#selecionando dados e dando novos nomes as colunas
d2 <- d %>% mutate(date = `Trimestre Móvel (Código)`,
                           date = lubridate::ym(paste0(date)),
                           Valor = Valor) %>%
            select(date, Valor)

```

```{r}
g <- ggplot()  +
  geom_line(data = d2,
            aes(x = date,
                y = Valor),
            linewidth = 1.5) +
  geom_point_interactive(data = d2,
                   aes(x = date,
                       y = Valor,
                       tooltip = paste0(format(date, format = "%m/%Y"), " ", Valor)),
                   color = "black",
                   size = 0.7) +     
  scale_x_date(date_breaks = "1 year",
               labels = scales::date_format("%Y")) +
  scale_y_continuous(labels = scales::number_format(accuracy = 1,
                                                    scale = 1/1e3),
                     limits = \(y){c(0, max(y) * 1.1)}) +
  labs(x = element_blank(),
       y = "Milhões de pessoas",
       title = "Quantidade de pessoas desalentadas - Brasil",
       subtitle = "Pessoas desalentadas",
       caption = "Fonte: PNADC-Mensal") +
  theme_bw() +
  tema_padrao

f_ggsave(g, "PNADCT_Qtd_Desalentadas")
g1 <- girafe(ggobj = g)
g1
```


# 11) Força de trabalho potencial

```{r, s10}
#chama a série no sidra
d <- sidrar::get_sidra(api = "/t/6438/n1/all/v/1641/p/all/c604/31752") #FT potencial

#selecionando dados e dando novos nomes as colunas
d2 <- d %>% mutate(date = `Trimestre Móvel (Código)`,
                           date = lubridate::ym(date),
                           Valor = Valor) %>%
            select(date, Valor)

```

```{r}
g <- ggplot()  +
  geom_line(data = d2,
            aes(x = date,
                y = Valor),
            linewidth = 1.5) +
  geom_point_interactive(data = d2,
                   aes(x = date,
                       y = Valor,
                       tooltip = paste0(format(date, format = "%m/%Y"), " ", Valor)),
                   color = "black",
                   size = 0.7) +    
  scale_x_date(date_breaks = "1 year",
               labels = scales::date_format("%Y")) +
  scale_y_continuous(labels = scales::number_format(accuracy = 1,
                                                    scale = 1/1e3),
                     limits = \(y){c(0, max(y) * 1.1)}) +
  labs(x = element_blank(),
       y = "Milhões de pessoas",
       title = "Quantidade de pessoas na força de trabalho potencial - Brasil",
       subtitle = "Pessoas que apesar de não ocupadas nem desocupadas poderiam assumir um emprego",
       caption = "Fonte: PNADC-Mensal") +
  theme_bw() +
  tema_padrao

f_ggsave(g, "PNADCT_Qtd_FTPotencial")
g1 <- girafe(ggobj = g)
g1
```


# 12) Quantidade de pessoas subutilizadas

```{r, s11}
#chama a série no sidra
d <- sidrar::get_sidra(api = "/t/6438/n1/all/v/1641/p/all/c604/40286") #FT

#selecionando dados e dando novos nomes as colunas
d <- d %>% mutate(FT = Valor, date = `Trimestre Móvel (Código)`) %>%
           select(date, FT) %>%
           mutate(date = lubridate::ym(date))

#cria gráfico ::ggplot
g <- ggplot(d)  +
          geom_line(aes(x = date,
                        y = FT),
                    linewidth = 1.5) +
           geom_point_interactive(
                   aes(x = date,
                       y = FT,
                       tooltip = paste0(format(date, format = "%m/%Y"), " ", FT)),
                   color = "black",
                   size = 0.7) +    
          scale_x_date(date_breaks = "1 year",
                       labels = scales::date_format("%Y")) +
          scale_y_continuous(labels = scales::number_format(scale = 1/1e3,
                                                            accuracy = 0.1),
                             limits = \(y){c(0, max(y) * 1.1)}) +
          labs(x = element_blank(),
               y = "Milhões de pessoas",
               title = "Quantidade de pessoas subutilizadas",
               subtitle = "Desocupados + Força de Trabalho potencial + subocupados",
               caption = "Fonte: PNADC-Mensal" ) +
          theme_bw() +
          tema_padrao

f_ggsave(g, "QtdSubutilizacao", h = 5)
g1 <- girafe(ggobj = g)
g1
```

Nota: A partir do 4º trimestre de 2015 houve mudança de conceito na subutilização da força de trabalho por insuficiência de horas trabalhadas (subocupação). Anteriormente, considerava-se no cálculo do indicador as horas efetivamente trabalhadas e, a partir do referido trimestre, as habitualmente trabalhadas. Houve ainda mudança na forma de captação do quesito de horas trabalhadas. <a href="https://ftp.ibge.gov.br/Trabalho_e_Rendimento/Pesquisa_Nacional_por_Amostra_de_Domicilios_continua/Nota_Tecnica/Nota_Tecnica_022016.pdf">Mais informações aqui.</a>


# 13) Composição da subutilização da força de trabalho no Brasil

```{r, s12}
#d1: Desocupados:                               SIDRA 1641 31750
#d2: Subocupados por insuficiencia de horas:    SIDRA 1641 31751
#d3: desalentados                               SIDRA 1641 46254
#d4: força de trabalho potencial                SIDRA 1641 31752

# chama a série no sidra
d1 <- sidrar::get_sidra(api = "/t/6438/n1/all/v/1641/p/all/c604/31750") #desocupado
d2 <- sidrar::get_sidra(api = "/t/6438/n1/all/v/1641/p/all/c604/31751") #subocupado
d3 <- sidrar::get_sidra(api = "/t/6438/n1/all/v/1641/p/all/c604/46254") #Desalentados
d4 <- sidrar::get_sidra(api = "/t/6438/n1/all/v/1641/p/all/c604/31752") #FTPotencial

# selecionando dados e dando novos nomes as colunas
d1 <- d1 %>%  mutate(Desocupados = Valor/1000, date = `Trimestre Móvel (Código)`) %>%
              select(date, Desocupados)
d2 <- d2 %>%  mutate(Subocupados = Valor/1000, date = `Trimestre Móvel (Código)`) %>%
              select(date, Subocupados)
d3 <- d3 %>%  mutate(Desalentados = Valor/1000, date = `Trimestre Móvel (Código)`) %>%
              select(date, Desalentados)
d4 <- d4 %>%  mutate(FTPotencial = Valor/1000, date = `Trimestre Móvel (Código)`) %>%
              select(date, FTPotencial)

# corrigindo o subocupado que em 3T2015 mudou de habitual para efetivo (ou o contrário).
# preencher o buraco
d2$Subocupados[44:45] <- d2$Subocupados[46]
d2$Subocupados[] <- as.numeric(d2$Subocupados[])

# e modificar os anteriores para ficar no mesmo patamar
d2$Subocupados[1:43] <- (d2$Subocupados[1:43] / d2$Subocupados[43])*d2$Subocupados[46]

# juntando
d <- left_join(d1, d2, by ="date")
d <- left_join(d, d3, by ="date")
d <- left_join(d, d4, by ="date")

# convertendo data de um dos dataframes para inserir no texto abaixo do gráfico
d$date <- lubridate::ymd(paste0(d$date, "01"))

# criando pessoas que procuraram emprego mas não poderiam assumir (FTpotencial - Desalento)
d$ProcurouNaoAssumiria <- d$FTPotencial - d$Desalentados

# total (para variação)
d$total <- d$Desocupados + d$Subocupados + d$Desalentados + d$ProcurouNaoAssumiria

# arredonda todas as colunas exceto a primeira
d <- data.frame(d[1:1], round(d[2:7], digits = 2))
d <- pivot_longer(data = d, cols = -date) 
d <- d |>  filter(!name %in% c("FTPotencial", "total")) |> 
     select(date, serie = name, value) |> 
     mutate(serie = ifelse(serie == "ProcurouNaoAssumiria", "Força de trabalho potencial (exceto desalento)", serie))
  
# cria gráfico ::ggplot
g <- ggplot2::ggplot(d)  +
          geom_line(aes(x = date, 
                        y = value, 
                        color = serie), 
                    linewidth = 1.5) +
          geom_point_interactive(
                   aes(x = date,
                       y = value,
                       color = serie,
                       tooltip = paste0(format(date, format = "%m/%Y"), " ", value)),
                   size = 0.7) +    
          labs(x = element_blank(),
               y = "Milhões de pessoas",
               title = "Composição da Taxa composta da Subutilização da força de trabalho",
               caption = "Fonte: PNADC-Mensal") +
          scale_x_date(expand = c(0, 0),
                       date_breaks = "1 year",
                       labels = scales::date_format("%Y")) +
          scale_color_brewer(palette = "Set1") +
          theme_bw() +
          tema_padrao +
          guides(color = guide_legend(nrow = 2))

f_ggsave(g, "Composicao_Subutilizacao", h = 5)
g1 <- girafe(ggobj = g)
g1

```

Nota: Houve mudança metodológica na subocupação por insuficiência de horas, apontada no item anterior. Por conta disto, neste caso, equalizamos o patamar da série até 2015 para manter a comparação com a série na metologia atual.


# 14) Rendimento efetivo médio todos os trabalhos

Tabela 6387 - Rendimento médio, real e nominal, de todos os trabalhos, efetivamente recebido no mês de referência, pelas pessoas de 14 anos ou mais de idade, ocupadas na semana de referência, com rendimento de trabalho.

```{r, s13}
#chama a série no sidra
d <- sidrar::get_sidra(api = "/t/6387/n1/all/v/5935/p/all")

#selecionando dados e dando novos nomes as colunas
d2 <- d %>%  mutate(date = `Trimestre Móvel (Código)`,
                    date = lubridate::ym(date),
                    Valor = Valor) %>%
            select(date, Valor)

```

```{r}
g <- ggplot()  +
  geom_line(data = d2,
            aes(x = date,
                y = Valor),
            linewidth = 1.5) +
  geom_point_interactive(data = d2,
           aes(x = date,
               y = Valor,
               tooltip = paste0(format(date, format = "%m/%Y"), " R$", Valor)),
           color = "black",
           size = 0.7) +   
  scale_x_date(date_breaks = "1 year",
               labels = scales::date_format("%Y")) +
  scale_y_continuous(labels = scales::dollar_format(accuracy = 1,
                                                    prefix = "R$",
                                                    big.mark = ".",
                                                    decimal.mark = ","),
                     limits = \(y){c(0, max(y) * 1.1)}) +
  labs(x = element_blank(),
       y = element_blank(),
       title = "Rendimento médio efetivo de todos os trabalhos - Brasil",
       subtitle = "Pessoas de 14 anos ou mais de idade, ocupadas na semana de referência, com rendimento de trabalho",
       caption = "Fonte: PNADC-Mensal") +
  theme_bw() +
  tema_padrao

f_ggsave(g, "PNADCT_RendaMedEfeTodosTrab")
g1 <- girafe(ggobj = g)
g1
```


# 15) Rendimento efetivo médio trabalhos principal, por posição na ocupação

Tabela 6389 - Rendimento médio, real e nominal, trabalho principal, habitualmente recebido no mês de referência, pelas pessoas de 14 anos ou mais de idade, ocupadas na semana de referência, com rendimento de trabalho, por posição na ocupação

```{r, s14}
#chama a série no sidra
d <- sidrar::get_sidra(api = "/t/6389/n1/all/v/5932/p/last%201/c11913/31722,31723,31725,31726,31727,45934,45935,45936,45937,96165")

#selecionando dados e dando novos nomes as colunas
d2 <- d %>%  mutate(date = `Trimestre Móvel (Código)`,
                    date = lubridate::ym(date),
                    Valor = Valor,
                    variavel = `Posição na ocupação e categoria do emprego no trabalho principal`,
                    cod = `Posição na ocupação e categoria do emprego no trabalho principal (Código)`,
                    variavel = case_when(cod == 31722	~ "Empregado privado C/ Carteira",
                                         cod == 31723	~ "Empregado privado S/ Carteira",
                                         cod == 31725	~ "Trab. doméstico C/ Carteira",
                                         cod == 31726	~ "Trab. doméstico S/ Carteira",
                                         TRUE ~ variavel)) %>%
            select(date, Valor, cod, variavel)
```



```{r}
g <- ggplot()  +
  geom_col_interactive(data = d2[d2$variavel != "Total",],
            aes(x = reorder(variavel, Valor),
                y = Valor,
                fill = variavel,
                tooltip = paste0("R$", round(Valor) )) ,
            size = 0.5,
            color = "black") +
  geom_hline(yintercept = d2[d2$variavel == "Total",]$Valor) +
  scale_y_continuous(labels = scales::dollar_format(accuracy = 1,
                                                    prefix = "R$",
                                                    big.mark = ".",
                                                    decimal.mark = ","),
                     limits = \(y){c(0, max(y) * 1.1)},
                     expand = c(0,0)) +
  scale_color_brewer(palette = "Set1") +
  coord_flip() +
  labs(x = element_blank(),
       y = element_blank(),
       title = "Rendimento médio trabalho principal, habitualmente recebido - Brasil",
       subtitle = "Pessoas de 14 anos ou mais de idade, ocupadas na semana de referência, com rendimento de trabalho",
       caption = "Fonte: PNADC-Mensal") +
  theme_bw() +
  tema_padrao +
  theme(legend.position = "none")

f_ggsave(g, "PNADCT_RendaMedHabTrabPrin_PosOcupa")
g1 <- girafe(ggobj = g)
g1
```


# 16) Massa real de rendimentos de todos os trabalhos

```{r, s15}
#chama a série no sidra
d1 <- sidrar::get_sidra(api = "/t/6393/n1/all/v/6295/p/all") %>%  #massa efetiva
      mutate(Grupo = "Efetiva")
d2 <- sidrar::get_sidra(api = "/t/6392/n1/all/v/6293/p/all") %>% #massa habitual
      mutate(Grupo = "Habitual")
d <- rbind(d1,d2)

#selecionando dados e dando novos nomes as colunas
d1 <- d %>% mutate(date = `Trimestre Móvel (Código)`,
                    date = lubridate::ymd(paste0(date, "01")),
                    Valor = Valor/1000) %>%
            select(date, Valor, Grupo)

```

```{r}
g <- ggplot()  +
  geom_line(data = d1,
            aes(x = date,
                y = Valor,
                color = Grupo),
            linewidth = 1.5,
            alpha = 0.7) +
  geom_point_interactive(data = d1,
           aes(x = date,
               y = Valor,
               color = Grupo,
               tooltip = paste0(format(date, format = "%m/%Y"), " R$", Valor)),
           size = 0.7) +     
  scale_x_date(date_breaks = "1 year",
               labels = scales::date_format("%Y")) +
  scale_y_continuous(labels = scales::number_format(accuracy = 1),
                     limits = \(y){c(0, max(y) * 1.1)}) +
  scale_color_brewer(palette = "Set1") +
  labs(x = element_blank(),
       y = "Bilhões R$",
       title = "Massa real de rendimentos - Brasil",
       subtitle = "Rendimento habituais e efetivos totais de todos os trabalhos",
       caption = "Fonte: PNADC-Mensal") +
  theme_bw() +
  tema_padrao

f_ggsave(g, "PNADCT_MassaRendaHabTodosTrab")
g1 <- girafe(ggobj = g)
g1
```



# 17) Percentual de pessoas contribuintes de instituto de previdência em qualquer trabalho entre ocupados

```{r, s17}
#chama a série no sidra
d <- sidrar::get_sidra(api = "/t/6460/n1/all/v/8463/p/all/d/v8463%201")

#selecionando dados e dando novos nomes as colunas
d1 <- d %>%  mutate(date = `Trimestre (Código)`,
                           date = lubridate::yq(paste0(date)),
                           Valor = Valor / 100) %>%
            select(date, Valor)

g <- ggplot()  +
  geom_line(data = d1,
            aes(x = date,
                y = Valor),
            linewidth = 1.5) +
  geom_point_interactive(data = d1,
           aes(x = date,
               y = Valor,
               tooltip = paste0(format(date, format = "%m/%Y"), " ", Valor * 100, "%")),
           color = "black",
           size = 0.7) +   
  scale_x_date(date_breaks = "1 year",
               labels = scales::date_format("%Y")) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1),
                     limits = \(y){c(0.5, max(y) * 1.1)}) +
  labs(x = element_blank(),
       y = element_blank(),
       title = "Taxa de cobertura previdênciária - Brasil",
       subtitle = "Percentual de pessoas contribuintes de instituto de previdência em qualquer trabalho entre ocupados",
       caption = "Fonte: PNADC-Trimestral") +
  theme_bw() +
  tema_padrao

f_ggsave(g, "PNADCT_Tx_PrevidenciaTodosTrab")
g1 <- girafe(ggobj = g)
g1
```



# 18) Salário mínimo real

```{r, s18}
#ipea <- ipeadatar::available_series()
d <- ipeadatar::ipeadata("GAC12_SALMINRE12") %>%
     mutate(MM12M = MM12m(value),
            year = lubridate::year(date)) %>%
     filter(year >= 1960)

g <- ggplot()  +
  geom_line(data = d,
            aes(x = date,
                y = value),
            size = 0.3) +
  geom_point_interactive(data = d,
           aes(x = date,
               y = value,
               tooltip = paste0(format(date, format = "%m/%Y"), " R$", round(value, 2) )),
           color = "black",
           size = 0.01) +    
  geom_line(data = d,
            aes(x = date,
                y = MM12M),
            linewidth = 1.5) +
  geom_point_interactive(data = d,
           aes(x = date,
               y = MM12M,
               tooltip = paste0(format(date, format = "%m/%Y"), " R$", round(MM12M, 2) )),
           color = "black",
           size = 0.3) +   
  scale_y_continuous(labels = scales::dollar_format(accuracy = 1,
                                                    prefix = "R$",
                                                    big.mark = ".",
                                                    decimal.mark = ","),
                     limits = \(y){c(0, max(y) * 1.1)}) +
  scale_x_date(expand = c(0.01, 0.01)) +
  labs(x = element_blank(),
       y = element_blank(),
       title = "Salário mínimo real",
       subtitle = "Média móvel de 12 meses",
       caption = "Fonte: IPEA") +
  theme_bw() +
  tema_padrao

f_ggsave(g, "SM_real_IPEA")
g1 <- girafe(ggobj = g)
g1
```





# 19) Horas médias trabalhadas por raça


```{r, s19}

d <- sidrar::get_sidra(api = "/t/6406/n1/all/v/8186/p/all/c86/allxt/d/v8186%201") #Horas médias trabalhadas por cor ou raça
d1 <- d %>%  mutate(date = `Trimestre (Código)`,
                           raca = `Cor ou raça`,
                           date = lubridate::yq(paste0(date))) %>%
            select(date, Valor, raca)

g <- ggplot()  +
  geom_line(data = d1,
            aes(x = date,
                y = Valor,
                color = raca),
            linewidth = 1.5) +
  geom_point_interactive(data = d1,
           aes(x = date,
               y = Valor,
               color = raca,
               tooltip = paste0(format(date, format = "%m/%Y"), " ", Valor)),
           size = 0.7) +   
  scale_x_date(date_breaks = "1 year",
               labels = scales::date_format("%Y"))  +
  scale_y_continuous( limits = c(36, 42)) +
  scale_color_brewer(palette = "Set1") +
  labs(x = element_blank(),
       y = element_blank(),
       title = "Horas médias habitualmente trabalhadas no trabalho principal por cor ou raça - Brasil",
       caption = "Fonte: PNADC-Trimestral") +
  theme_bw() +
  tema_padrao

f_ggsave(g, "PNADCT_Hora_Media_Habitual_Cor")
g1 <- girafe(ggobj = g)
g1

```

O Sidra não divulgou os valores para a série nos trimestres onde a pesquisa foi feita por telefone em 2020, devido à pandemia.

# 20) Rendimento real médio por sexo

```{r, s20}

d <- sidrar::get_sidra(api = "/t/5436/n1/all/v/5933/p/all/c2/allxt") #Rendimento Médio Real habitualmente recebidos por sexo  .

#selecionando dados e dando novos nomes as colunas
d1 <- d %>%  mutate(date = `Trimestre (Código)`,
                           date = lubridate::yq(paste0(date))) %>%
            select(date, Valor, Sexo)

g <- ggplot()  +
  geom_line(data = d1,
            aes(x = date,
                y = Valor,
                color = Sexo),
            linewidth = 1.5) +
  geom_point_interactive(data = d1,
           aes(x = date,
               y = Valor,
               color = Sexo,
               tooltip = paste0(format(date, format = "%m/%Y"), " R$", Valor)),
           size = 0.7) +   
  scale_x_date(date_breaks = "1 year",
               labels = scales::date_format("%Y"))  +
  scale_y_continuous(labels = scales::dollar_format(accuracy = 1,
                                                    prefix = "R$",
                                                    big.mark = ".",
                                                    decimal.mark = ","),
                     limits = \(y){c(0, max(y) * 1.1)}) +
  scale_color_brewer(palette = "Set1") +
  labs(x = element_blank(),
       y = element_blank(),
       title = "Renda média habitual de todos os trabalhos por Sexo - Brasil",
       caption = "Fonte: PNADC-Trimestral") +
  theme_bw() +
  tema_padrao

f_ggsave(g, "PNADCT_Renda_Real_Media_Habitual_Sexo")
g1 <- girafe(ggobj = g)
g1

```

O Sidra não divulgou os valores para a série nos trimestres onde a pesquisa foi feita por telefone em 2020, devido à pandemia.

# 21) População ocupada por contribuição ao instituto de previdência

```{r, s21}

d <- sidrar::get_sidra(api = "/t/5947/n1/all/v/4090/p/all/c12027/allxt") #População (por mil habitantes) que está contribuindo para instituto de previdencia.

#selecionando dados e dando novos nomes as colunas
d1 <- d %>%  mutate(date = `Trimestre (Código)`,
                           contribui =`Contribuição para instituto de previdência em qualquer trabalho`,
                           date = lubridate::yq(paste0(date)))%>%
            select(date, Valor, contribui)

g <- ggplot()  +
  geom_line(data = d1,
            aes(x = date,
                y = Valor,
                color = contribui),
            linewidth = 1.5) +
  geom_point_interactive(data = d1,
           aes(x = date,
               y = Valor,
               color = contribui,
               tooltip = paste0(format(date, format = "%m/%Y"), " ", Valor)),
           size = 0.7) +   
  scale_x_date(date_breaks = "1 year",
               labels = scales::date_format("%Y"))  +
  scale_y_continuous(limits = \(y){c(0, max(y) * 1.1)},
                     labels = scales::number_format(scale = 1/1e3)) +
  scale_color_brewer(palette = "Set1") +
  labs(x = element_blank(),
       y = "milhões",
       title = "População ocupada por contribuição ao instituto de previdência",
       caption = "Fonte: PNADC-Trimestral") +
  theme_bw() +
  tema_padrao

f_ggsave(g, "PNADCT_Pop_Contribuinte_NContribuintes")
g1 <- girafe(ggobj = g)
g1

```

O Sidra não divulgou os valores para a série nos trimestres onde a pesquisa foi feita por telefone em 2020, devido à pandemia.

# 22) Subocupação

```{r, s22}

d <- sidrar::get_sidra(api = "/t/6808/n1/all/v/9819,9820,9879,9883,9886/p/all/d/v9819%201,v9820%201,v9879%201,v9883%201") #Sub_ocupacao
#selecionando dados e dando novos nomes as colunas
d <- filter(d, `Variável (Código)` == 9819)
d1 <- d %>%  mutate(date = `Trimestre (Código)`,
                          date = lubridate::yq(paste0(date))) %>%
            select(date, Valor)

g <- ggplot()  +
  geom_line(data = d1,
            aes(x = date,
                y = Valor),
            linewidth = 1.5) +
  geom_point_interactive(data = d1,
           aes(x = date,
               y = Valor,
               tooltip = paste0(format(date, format = "%m/%Y"), " ", Valor, "%")),
           color = "black",
           size = 0.7) +   
  scale_x_date(date_breaks = "1 year",
               labels = scales::date_format("%Y"))  +
  scale_y_continuous( limits = c(0,10)) +
  labs(x = element_blank(),
       y = element_blank(),
       title = "Taxa de subocupação por insuficiência de horas trabalhadas",
       caption = "Fonte: PNADC-Trimestral") +
  theme_bw() +
  tema_padrao

f_ggsave(g, "PNADCT_Taxa_Subocupacao")
g1 <- girafe(ggobj = g)
g1

```

A partir do 4º trimestre de 2015 houve mudança de conceito na subutilização da força de trabalho por insuficiência de horas trabalhadas. Anteriormente, considerava-se no cálculo do indicador as horas efetivamente trabalhadas e, a partir do referido trimestre, as habitualmente trabalhadas. Houve ainda mudança na forma de captação do quesito de horas trabalhadas. Por conta disto, não são realizadas comparações (trimestrais e/ou anuais) entre trimestres que não compartilham o mesmo conceito/forma de captação.



# 23) Rendimento real médio efetivo por posição de ocupação

```{r, s23}
d <-sidrar::get_sidra(api = "/t/5439/n1/all/v/5934/p/all/c12029/allxt") # Rendimento real médio efetivo por posição de ocupação

d1 <- d %>%  mutate(date = `Trimestre (Código)`,
                           date = lubridate::yq(paste0(date)),
                           pos_ocup = `Posição na ocupação no trabalho principal` ) %>%
            select(date, Valor, pos_ocup)

g <- ggplot()  +
  geom_line(data = d1,
            aes(x = date,
                y = Valor,
                color = pos_ocup),
            linewidth = 1.5) +
  geom_point_interactive(data = d1,
           aes(x = date,
               y = Valor,
               color = pos_ocup,
               tooltip = paste0(format(date, format = "%m/%Y"), " R$", Valor )),
           size = 0.7) +   
  scale_x_date(date_breaks = "1 year",
               labels = scales::date_format("%Y"))  +
  scale_y_continuous(labels = scales::dollar_format(accuracy = 1,
                                                    prefix = "R$",
                                                    big.mark = ".",
                                                    decimal.mark = ","),
                     limits = \(y){c(0, max(y) * 1.1)}) +
  scale_color_brewer(palette = "Set1") +
  labs(x = element_blank(),
       y = element_blank(),
       title = "Rendimento real médio habitual do trabalho principal por posição na ocupação",
       caption = "Fonte: PNADC-Trimestral") +
  theme_bw() +
  tema_padrao
f_ggsave(g, "PNADCT_Redimento_Real_Hab_Pos_Ocup")

g1 <- girafe(ggobj = g)
g1
```




# 24) População ocupada por tamanho do estabelecimento

```{r, s25}

d <- sidrar::get_sidra(api = "/t/6413/n1/all/v/10441/p/all/c2/6794/c790/allxt") #População ocupada dividida pelo tamanho do empreendimento que trabalha (trabalho principal)

d2 <- d %>%
  mutate(date = as.Date(paste0(Ano, "-01-01"))) %>%
  mutate(tamanho = `Tamanho do empreendimento` ) %>%
  mutate( tamanho_codigo = `Tamanho do empreendimento (Código)`) %>%
  select(date, Valor, tamanho, tamanho_codigo)

d3 <- mutate(d2, tamanho = case_when(tamanho_codigo == 40304 ~ "Entre 1 e 5 pessoas",
                                   tamanho_codigo == 40305 ~ "Entre 6 e 10",
                                   tamanho_codigo == 40306 ~ "Entre 11 e 50",
                                   tamanho_codigo == 40307 ~ "Mais de 51"))
g <- ggplot()  +
  geom_line(data = d3,
            aes(x = date,
                y = Valor,
                color = tamanho),
            linewidth = 1.5) +
  geom_point_interactive(data = d3,
           aes(x = date,
               y = Valor,
               color = tamanho,
               tooltip = paste0(format(date, format = "%m/%Y"), " ", Valor )),
           size = 0.7) +   
  scale_x_date(date_breaks = "1 year",
               labels = scales::date_format("%Y"))  +
  scale_y_continuous( limits= \(y){c(0, max(y) * 1.1)},
                      labels = scales::number_format(scale = 1/1e3,
                                                    accuracy = 1)) +
  scale_color_brewer(palette = "Set1") +
  labs(x = element_blank(),
       y = "Milhões",
       title = "População ocupada por tamanho de empreendimento",
       caption = "Fonte: PNADC-Anual") +
  theme_bw() +
  tema_padrao

f_ggsave(g, "PNADCT_Pessoas_por_tamanho_empresa")

g1 <- girafe(ggobj = g)
g1

```

